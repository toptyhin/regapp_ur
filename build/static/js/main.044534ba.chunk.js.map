{"version":3,"sources":["components/Form/appContext.js","components/Form/lkSteps.js","components/Form/searchAddress.js","components/Form/childList.js","components/Form/codeConfirmation.js","components/Form/registerChooser.js","components/Form/plusMinus.js","components/Form/cards.js","components/Form/requiredFieldsSegment.js","components/Form/requiredFields.js","components/Form/index.js","App.js","reportWebVitals.js","index.js"],"names":["AppContext","React","createContext","state","setaddress","LkSteps","step","this","props","active","completed","className","onClick","Component","XMLHttpRequest","ChildList","children","CodeConfirmation","confCode","Array","numberItems","codeInput","e","target","num","dataset","keyCode","parseInt","previousElementSibling","focus","value","match","length","nextElementSibling","filter","i","riseValue","join","key","keys","map","_props","id","name","data-num","onKeyUp","type","PlusMinusInput","useState","min","current","setCurrent","errorMax","setErrorMax","max","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","preset","passState","val","passVal","labelTxt","Button","Group","compact","Icon","Input","Cards","open","setOpen","error","setError","errorText","setErrorText","inputComplete","setInputComplete","cards","setCards","queryCardNumber","v","query","cardnum","options","method","mode","headers","Accept","body","JSON","stringify","fetch","labelText","btnDisabled","Segment","Checkbox","label","onChange","d","checked","Transition","visible","animation","duration","unmountOnHide","Form","Field","mask","unmask","placeholder","onAccept","unmskedValue","m","_value","onComplete","then","json","status","indexOf","err","checkCard","icon","color","disabled","arr","push","passValue","as","List","divided","size","verticalAlign","item","Item","Content","delCard","RFSegment","passBlurEvent","change","validator","error_message","setActive","complete","setComplete","setVal","Message","header","content","onFocus","onBlur","RequiredFields","bankName","setBankName","address","bik","inn","corr","account","bankDetails","setBankDetails","setFieldData","passData","dadata","horizontal","management","kpp","ogrn","okpo","okved","token","sugg","data","bic","payment","correspondent_account","transitionOnMount","FormLoading","setValue","n","st","setState","setUnmaskedValue","isNewContract","foundData","setCompanyDetails","companyDetails","other","—ÅompanyDetailsComplete","agree","dadataSearchValue","datalist","phone","undefined","email","confirmation","pendingConfirmation","contactConfirmed","validInput","mailInput","telInput","cardsNum","cardsList","contractReady","contractError","lkData","innExists","processingRequest","contractno","docoptions","text","searchResults","confirmContract","bind","getContract","components","foo","contextSate","setAddress","confirmBtnDisabled","docsystem","privateData","positive","attached","Header","Description","href","link","login","password","negative","Grid","Row","setStep","Column","width","Provider","raised","action","askDadata","replace","renderDadata","fluid","loading","c_resp","cr","Select","k","doc","class","defaultChecked","prevState","parentElement","querySelector","ButtonGroup","Authorization","response","result","parse","suggestions","setFoundCompany","rec","found","isArray","ddata","main","r","branch_type","name_list","unrestricted_value","address_obj","fio","Object","docno","docdate","delivery_address","org","details","blob","url","window","URL","createObjectURL","a","document","createElement","download","appendChild","click","remove","revokeObjectURL","obj","cid","App","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.044534ba.chunk.js","sourcesContent":["import React from 'react'\nconst AppContext = React.createContext({\n    state: {},\n    setaddress: ()=>{}\n});\nexport default AppContext;\n","import {Component} from 'react'\nimport './steps.css'\n\nexport default class LkSteps extends Component {\n\n  render() {\n    let step = this.props.active;\n    let completed = this.props.completed;\n    return (\n      <nav className=\"sixteen wide column\">  \n        <div className=\"steps_container\">\n          <div className=\"steps\">\n            <div \n              className={`step ${step === 1 ? \"active\" :\"\"} ${step>1 && completed ? \"completed\" :\"\"}`}\n              onClick={()=>{this.props.onClick(1)}}\n            >\n              <span className=\"breadcrumb__inner\">\n                <span className=\"breadcrumb__title\">–ö–æ–º–ø–∞–Ω–∏—è</span>\n                <span className=\"breadcrumb__desc\">–ü–æ–∏—Å–∫ –∫–æ–º–ø–∞–Ω–∏–∏ –ø–æ –ò–ù–ù</span>\n              </span>\n            </div>\n            <div \n              className={`step ${step === 2 ? \"active\" :\"\"} ${step>2 && completed ? \"completed\" :\"\"}`}\n              onClick={()=>{this.props.onClick(2)}}\n            >\n              <span className=\"breadcrumb__inner\">\n                <span className=\"breadcrumb__title\">–†–µ–∫–≤–∏–∑–∏—Ç—ã</span>\n                <span className=\"breadcrumb__desc\">–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</span>\n              </span>\n            </div>\n            <div \n              className={`step ${step === 3 ? \"active\" :\"\"} ${step>3 && completed ? \"completed\" :\"\"}`}\n              onClick={()=>{this.props.onClick(3)}}\n            >\n              <span className=\"breadcrumb__inner\">\n                <span className=\"breadcrumb__title\">–î–æ–≥–æ–≤–æ—Ä</span>\n              </span>\n            </div>\n            <div \n              className={`step ${step === 4 ? \"active\" :\"\"} ${step>4 ? \"completed\" :\"\"}`}\n              onClick={()=>{this.props.onClick(4)}}\n            >\n              <span className=\"breadcrumb__inner\">\n                <span className=\"breadcrumb__title\">–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</span>\n              </span>\n            </div>\n          </div>\n        </div>\n      </nav>\n    )\n  }  \n}","import React from 'react'\nimport { Search } from 'semantic-ui-react'\nimport AppContext from './appContext';\n\n\nconst initialState = {\n    loading: false,\n    results: [],\n    value: '',\n    text: '–£–∫–∞–∂–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏',\n    errorText: '–£—Ç–æ—á–Ω–∏—Ç–µ –∞–¥—Ä–µ—Å',\n    error: false\n  };\nconst token = 'a677c0dcff5cd2767c0aa85a6793f5430a3be34a';\nconst xhr = new XMLHttpRequest();\n\n  function searchReducer(state, action) {\n    switch (action.type) {\n      case 'CLEAN_QUERY':\n        return initialState\n      case 'START_SEARCH':\n        return { ...state, loading: true, value: action.query, error: false }\n      case 'FINISH_SEARCH':\n        return { ...state, loading: false, results: action.results, error: false }\n      case 'UPDATE_SELECTION':\n        return { ...state, value: action.selection, selected: action.selected, error: false }\n      case 'VERIFY_SEARCH':\n        return { ...initialState, error: true }        \n  \n      default:\n        throw new Error()\n    }\n  }\n  \n  const SearchAddress = (props) => {\n    const [state, dispatch] = React.useReducer(searchReducer, initialState)\n    const { loading, results, value, selected, error, text, errorText } = state;\n    const {stateCont, setAddress} = React.useContext(AppContext)\n  \n    const timeoutRef = React.useRef()\n\n    const handleSearchChange = React.useCallback((e, data) => {\n      clearTimeout(timeoutRef.current)\n      dispatch({ type: 'START_SEARCH', query: data.value })\n  \n      timeoutRef.current = setTimeout(() => {\n        if (data.value.length === 0) {\n          dispatch({ type: 'CLEAN_QUERY' })\n          return\n        }\n        let payload = {\n            query: data.value,\n            count: 10,\n          };\n        xhr.abort();\n        xhr.open('POST', `https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/address`);\n        xhr.setRequestHeader('Accept', 'application/json');\n        xhr.setRequestHeader('Authorization', `Token ${token}`);\n        xhr.setRequestHeader('Content-Type', 'application/json');\n        xhr.send(JSON.stringify(payload));        \n        xhr.onreadystatechange = () => {\n            if (xhr.readyState !== 4) {\n              return;\n            }\n      \n            if (xhr.status === 200) {\n              const { suggestions } = JSON.parse(xhr.response);\n              let vals = [];\n              suggestions.map(i=>{vals.push(\n                  {\n                    title: i.unrestricted_value,\n                    region: i.data.region,\n                    postcode: i.data.postal_code,\n                    address: i.value.replace(i.data.region_with_type+',','').trim()\n\n                  }\n                )})\n              \n      \n              if (suggestions && suggestions.length) {\n                dispatch({\n                    type: 'FINISH_SEARCH',\n                    results: vals,\n                  })\n              }\n            }\n          };        \n      }, 300)\n    }, [])\n    \n    React.useEffect(() => {\n      return () => {\n        clearTimeout(timeoutRef.current)\n      }\n    }, [])\n  \n    return (\n        <div className=\"field\">\n            <label>{error ? errorText:text}</label>\n              <Search\n                fluid\n                name='address'\n                className={error?'error':''}\n                loading={loading}\n                onResultSelect={(e, data) => {\n                      // props.setSelected(e,{\n                      //     name:'address',\n                      //     value: data.result\n                      // });\n                      setAddress(data.result);\n\n                      return dispatch({ type: 'UPDATE_SELECTION', selection: data.result.unrestricted_value, selected: data.result })\n                  }\n                }\n                onSearchChange={handleSearchChange}\n                minCharacters={3}\n                results={results}\n                noResultsMessage='–ê–¥—Ä–µ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω'\n                value={value}\n                onBlur={()=>{\n                  if (!selected || !selected.postcode) {\n                    setAddress({});\n                    dispatch({ type: 'VERIFY_SEARCH' })\n                    return;\n                  }\n                }}\n              />\n        </div>\n    )\n  }\n  \n  export default SearchAddress","function ChildList(props) {\n    return (<div className=\"list\">{props.children()}</div>);\n}\nexport default ChildList","import React from 'react'\n\nconst CodeConfirmation = (props) => {\n\n    const inp = (_props) => (<input name=\"confirmation[]\" key={_props.key} data-num={_props.id} onKeyUp={codeInput} type=\"text\"/>)\n    const makeChilds = () => {\n        return [...Array(props.numberItems).keys()].map((e,i)=>{\n            return inp({\n                key:'cinp_'+i,\n                id: i\n            });\n        })\n    }\n    const confCode = new Array(props.numberItems);\n\n    const codeInput = (e)=>{\n        const {target} = e;\n        const num = target.dataset.num;\n        if (e.keyCode === 8 && parseInt(num) !== 0) {\n            target.previousElementSibling.focus();\n            confCode[num]=target.value;\n            return;\n        }\n    \n        if (!target.value.match(/^\\d{1}$/)) {\n            if (parseInt(num) === props.numberItems-1) {\n                target.value = e.key;\n                return;    \n            }\n            target.value = '';\n            confCode[num]=target.value;\n            return;\n        }\n    \n        if (target.value.length === 1 && num < props.numberItems-1) {\n            confCode[num]=target.value;\n            target.nextElementSibling.focus();\n        }\n\n        if (target.value.length === 1 && parseInt(num) === props.numberItems-1) {\n            confCode[num]=target.value;\n            if (confCode.filter(i=> i.match(/\\d/)).length === props.numberItems) {\n                props.riseValue(confCode.join(''));\n            }\n        }\n    }    \n\n    return (\n        <div className=\"field\">\n        <label>–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –ø–æ–¥–¥—Ç–µ—Ä–∂–¥–µ–Ω–∏—è –∏–∑ –ø–∏—Å—å–º–∞</label>\n            <div className=\"ui ccode\">\n                {makeChilds()}\n            </div>\n        </div>\n    );\n}\n\nexport default CodeConfirmation;\n","// import React, {Component} from 'react'\nimport {Component} from 'react'\nimport {IMaskInput} from 'react-imask';\nimport { Segment, Form, Transition, Message} from 'semantic-ui-react'\nimport CodeConfirmation from './codeConfirmation'\n\nexport default class RegisterChooser extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: false\n        };\n        this.validateInput = this.validateInput.bind(this);\n    }\n\n    validateInput(e,d) \n    {\n        \n        if (!this.props.name) return false;\n\n        const mcheck = ()=>{\n                const emailRegex = /^([A-Za-z0-9_\\-.+])+@([A-Za-z0-9_\\-.])+\\.([A-Za-z]{2,})$/;\n                return !emailRegex.test(d.value);\n        };\n        const tcheck = ()=>{\n            const elvnDgs = /^\\d{11}$/;\n            return !elvnDgs.test(d.value);\n        };  \n        \n        let error = false;\n        if (this.props.name === 'email') {\n            error = mcheck();\n            this.setState({error:error})\n            this.props.passValue(null,{\n                    name:'email',\n                    value: d.value\n            });\n            this.props.passValue(null,{\n                name: 'validInput',\n                value: !error\n            });             \n        }\n        if (this.props.name === 'phone') {\n            error = tcheck();\n            this.setState({error:error})\n            this.props.passValue(d.value,'phone');\n            this.props.passValue(!error, 'validInput');\n        }        \n\n    }\n\n    render() {\n        \n        const {\n            error\n        } = this.state;\n        \n        return (\n            <Segment>\n                {this.props.message && \n                    <Message header={this.props.message} />\n                }\n                {this.props.mask && \n                    <Form.Field className={error ? 'error':''}>\n                        <label>{this.props.label}</label>\n                        <IMaskInput \n                            name={this.props.name} \n                            disabled={this.props.disabled}\n                            mask={this.props.mask}\n                            unmask={this.props.unmask}\n                            placeholder={this.props.placeholder} \n                            onAccept={\n                            (unmskedValue)=>this.validateInput(null,{value:unmskedValue})\n                            }\n                        />\n                    </Form.Field>                        \n                }\n\n                {!this.props.mask &&                      \n                <Form.Input \n                    error={error}\n                    label={error ? this.props.errorText : this.props.label}\n                    name={this.props.name} \n                    placeholder={this.props.placeholder} \n                    disabled={this.props.disabled}\n                    onChange={this.validateInput}\n                    >\n                </Form.Input>\n                }\n                <Transition visible={this.props.confirmationError} animation='fade up' duration={500}>\n                    <Message\n                    color=\"red\"\n                    header=\"–û—à–∏–±–∫–∞\"\n                    content=\"–ö–æ–¥ –≤–≤–µ–¥–µ–Ω –æ—à–∏–±–æ—á–Ω–æ. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∫–æ–¥–∞\"\n                    />     \n                </Transition>                                               \n                <Transition visible={this.props.codePending} animation='fade up' duration={500}>\n                    <Segment>\n                        {/* <Form.Input \n                            label={this.props.confirmationLabel} \n                            name='confirmation' \n                            placeholder='–ö–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è' \n                            // value = {confirmationValue}\n                            onChange={this.props.passValue}>\n                        </Form.Input> */}\n\n                        <CodeConfirmation\n                        numberItems={4}\n                        riseValue={(value)=>this.props.passValue(null,{\n                          name:'confirmation',\n                          value: value\n                        })}\n                      ></CodeConfirmation>\n\n\n                    </Segment>\n                </Transition>                                               \n            </Segment>            \n        )\n    }\n}","import React, { useState } from 'react'\nimport { Button, Icon, Input } from 'semantic-ui-react'\n\nfunction PlusMinusInput(props) {\n\n    let [current, setCurrent] = useState(props.min ? props.min : 0);\n    const [errorMax, setErrorMax] = useState(false);\n    const max = props.max ? props.max : Number.POSITIVE_INFINITY;\n    const min = props.min ? props.min : Number.NEGATIVE_INFINITY;\n\n    if (props.preset > current) {\n        current = props.preset;\n    }\n\n    const increase = () => {\n        let val = current+1 < max ? current+1 : max;\n        setCurrent(val);\n        passState(val);\n        if (current+1 > max) {\n            setErrorMax(true);    \n        }\n    }\n    const decrease = () => {\n        let val = current-1 > min ? current-1 : min\n        setCurrent(val);\n        passState(val);\n        setErrorMax(false);\n    }    \n    const passState = (val) => {\n        props.passVal(null,{\n            name: props.name,\n            value:val\n        })\n    }\n\n    const labelTxt = errorMax ? '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –º–æ–∂–Ω–æ –∑–∞–∫–∞–∑–∞—Ç—å 5 –∫–∞—Ä—Ç' : '–£—Ç–æ—á–Ω–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç';\n\n    return (\n        <div className=\"field flex\">\n            <label>{labelTxt}</label>\n            <Button.Group>\n\n                <Button compact={true} className='darked' onClick={decrease} >\n                    <Icon name='minus'/>\n                </Button>\n                \n                <Input value={current} />\n                \n                <Button compact={true} className='darked' onClick={increase}>\n                    <Icon name='plus'/>\n                </Button>\n\n            </Button.Group>\n        </div>                \n    );\n}\n\nexport default PlusMinusInput","import { render } from \"@testing-library/react\";\nimport React, {Component,useState} from \"react\";\nimport {Button, Checkbox, Form, Icon, Segment, Transition, List} from \"semantic-ui-react\";\nimport {IMaskInput} from 'react-imask';\n\nconst Cards = (props) =>{\n\n    const [open, setOpen] = useState(false);\n    const [error, setError] = useState(false);\n    const [errorText, setErrorText] = useState('');\n    const [current, setCurrent] = useState('');\n    const [inputComplete, setInputComplete] = useState(false);\n    const [cards, setCards] = useState([]);\n\n    const handleCheckbox = (e,d)=>{\n        setOpen(d.checked)\n    }\n\n    const checkCard = (v,m) => {\n        try {\n        queryCardNumber(v) \n            .then(e=>e.json())\n            .then(json=>{\n                if (json.status === 'ok' && cards.indexOf(m._value) === -1) {\n                    setInputComplete(true);\n                    setError(false);\n                    setCurrent(m._value);\n                } else {\n                    if (cards.indexOf(m._value) !== -1) {\n                        setError(true);\n                        setErrorText(' –í—ã —É–∂–µ –≤–≤–µ–ª–∏ —ç—Ç—É –∫–∞—Ä—Ç—É');\n                    } else {\n                        setError(true);\n                        setErrorText('–ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã');\n                    }\n                }\n            })\n        } catch (err) {\n            setError(true);\n            setErrorText('–ù–µ –º–æ–≥—É –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–∞—Ä—Ç—É, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç–∫—É');            \n        }\n\n    }\n\n    const addCard = () => {\n        if (current !=='' && inputComplete && cards.indexOf(current) === -1) {\n            let arr = [...cards];\n            arr.push(current)\n            props.passValue(arr);\n            setCards(arr)\n        }\n    }\n\n    const resetError = (v,m)=>{\n        if (error) {\n            setError(false);\n            setInputComplete(false);\n        } else {\n            if (m._value.length < current.length || m._value === '') {\n                setInputComplete(false);\n            }\n        }\n    }\n\n    const delCard = (v) => {\n        const arr = cards.filter( i => i !== v);\n        setCards(arr);\n        props.passValue(arr);\n    }\n\n    const queryCardNumber = (v) => {\n        const url = \"https://data.inforkom.ru/api/v1/util/contract/validateCard\";\n        const query = {\n            cardnum: v\n        };\n        const options = {\n          method: \"POST\",\n          mode: \"cors\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n          },\n          body: JSON.stringify(query),\n        };\n        return fetch(url,options)\n    }\n\n    const labelText = error ? errorText : '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã :';\n    const btnDisabled = error || !inputComplete;\n    \n    return (\n        <Segment>\n            <Checkbox\n                label='–£ –º–µ–Ω—è —É–∂–µ –µ—Å—Ç—å —Ç–æ–ø–ª–∏–≤–Ω—ã–µ –∫–∞—Ä—Ç—ã –ò–Ω—Ñ–æ—Ä–∫–æ–º'\n                onChange={handleCheckbox}\n                ></Checkbox>\n            <Transition\n                visible={open}\n                animation=\"fade\"\n                duration={500}\n                unmountOnHide={true}\n            >\n                <>\n                    <Form.Field className={error ? 'error cardsList':'cardsList'}>\n                            <label>{labelText}</label>\n                            <div className=\"mask_action\">\n                                <IMaskInput \n                                    name='validate num'\n                                    // disabled={this.props.disabled}\n                                    mask={[{mask:\"0000 0000 0000 0000\"}, {mask:\"000000 00000000 00000\"}]}\n                                    unmask={true}\n                                    placeholder=\"0000 0000 0000 0000 / 000\"\n                                    onAccept={\n                                        (unmskedValue,value)=>resetError(unmskedValue,value)\n                                    }\n                                    onComplete={\n                                        (unmskedValue,value)=>checkCard(unmskedValue,value)\n                                    }\n                                />\n                                <Button \n                                    icon \n                                    color={error || !inputComplete ? 'grey' : 'olive'}\n                                    disabled={btnDisabled}\n                                    onClick={addCard}>\n                                        <Icon name='add'/>\n                                </Button>\n                            </div>\n                    </Form.Field>       \n                    <Transition.Group\n                        as={List}\n                        duration={200}\n                        divided\n                        size='medium'\n                        verticalAlign='middle'\n                        >\n                        {cards.map((item) => (\n                            <List.Item key={item} className='tini_border'>\n                            <List.Content className='flex'>\n                                {item}\n                                <Icon \n                                color='red'\n                                size='small'\n                                name='close'\n                                onClick={()=>delCard(item)}\n                                />\n                            </List.Content>\n                            </List.Item>\n                        ))}\n                    </Transition.Group>                    \n                </>\n            </Transition>\n        </Segment>\n    )\n}\nexport default Cards","import React, { useState } from \"react\";\nimport {Form, Segment,Message } from \"semantic-ui-react\";\n\nconst RFSegment = (props) => {\n\n    const {label, placeholder, value, passBlurEvent = false, change, validator = false, error_message = '–ü–æ–ª–µ –Ω–µ–∑–∞–ø–æ–ª–Ω–µ–Ω–æ'} = props\n    const [active, setActive] = useState(false);\n    const [error, setError] = useState(false);\n    const [complete, setComplete] = useState(!!value);\n    const [val, setVal] = useState(value);\n    const getColor = () => {\n        return active ? 'blue' : complete ? 'green' : error ? 'red' : 'grey'\n    }\n    const handleChange = (e) => {\n        change(e.target.value);\n        setVal(e.target.value);\n       \n    }\n\n    const validate = (e) => {\n        setActive(false);\n        if (validator) {\n\n            if (validator(e.target.value)) {\n                setError(false);\n                setComplete(true);\n            } else {\n                setError(true);\n            }\n        } else {\n            if (!e.target.value) {\n                setError(true);\n            } else {\n                setError(false);\n                setComplete(true);\n            }\n        }\n        passBlurEvent && passBlurEvent();\n    }\n\n    const renderError = () => {\n        if (error) {\n        return (\n            <Message\n            color='orange'\n            header='–û—à–∏–±–∫–∞'\n            content={error_message}\n        />          \n        )\n        } else {\n            return null;\n        }\n    };\n\n\n    return (\n        <Segment color={getColor()}>\n        <Form.Field error={error}>\n          <label>{label}</label>\n          {renderError()}\n          <input \n          placeholder={placeholder}\n          value={val}\n          onFocus={setActive}\n          onBlur={validate}\n          onChange={handleChange}\n          />\n        </Form.Field>\n        </Segment>        \n    )\n}\n\nexport default RFSegment;","import React, { useState } from \"react\";\nimport {\n    Button,\n    Form,\n    Segment,\n    Message,\n    Transition,\n    Grid,\n    ButtonGroup,\n    List,\n  } from \"semantic-ui-react\";\n\n  import ReactDadataBox from 'react-dadata-box';\n  import RFSegment from './requiredFieldsSegment';\n\nconst RequiredFields = (props) => {\n\n  let fieldsData = {};\n\n  const [bankName, setBankName] = useState(false);\n  const [bankDetails, setBankDetails] = useState({\n    address:'',\n    bik:'',\n    inn:'',\n    name:'',\n    corr:'',\n    account:''\n  });\n  // not used\n  const [doca, setDoca] = useState('');\n  const [openPosa, setOpenPosa] = useState(false);\n  const [posa, setPosa] = useState('');\n  //*** */\n\n  const getManagement = () => props.dadata.management && props.dadata.management.name ? props.dadata.management.name : '';\n  \n  const bankNameRender = () => bankName ? '–ù–∞–∑–≤–∞–Ω–∏–µ –±–∞–Ω–∫–∞':'–ë–ò–ö –ë–∞–Ω–∫–∞'\n  const bankSelected = (sugg) => {\n    setBankDetails({\n      address: sugg.data.address ? sugg.data.address.value : '',\n      bik: sugg.data.bic ? sugg.data.bic : '',\n      inn: sugg.data.inn ? sugg.data.inn : '',\n      name: sugg.data.name ? sugg.data.name.payment : '',\n      corr: sugg.data.correspondent_account ? sugg.data.correspondent_account : '',\n      account: ''\n    });\n    setBankName(sugg.value || '');\n    setFieldData('bank',sugg.data.name ? sugg.data.name.payment : '');\n    setFieldData('bik',sugg.data.bic ? sugg.data.bic : '');\n    setFieldData('ks',sugg.data.correspondent_account ? sugg.data.correspondent_account : '');\n    setFieldData('baddress',sugg.data.address ? sugg.data.address.value : '');\n  }\n  \n  // const setActiveField = (str) => {\n  //   setColor(str, {\n  //     active: true,\n  //     error: false,\n  //     complete: false\n  //   })\n  // }\n\n\n  // const setFieldData = (key,val) => fieldsData[key] = val;\n  const setFieldData = (key,val) => {\n    props.passData(key,val)\n  };\n  \n  const validRS = (num) => {\n    if (num.match(/^\\d{20}$/)) {\n      return num\n    } else {\n      return '';\n    }\n  }\n\n  const tryRP = (typ, val) => {\n    //not used\n    const position = [\n      {from:'–¥–∏—Ä–µ–∫—Ç–æ—Ä',to:'–¥–∏—Ä–µ–∫—Ç–æ—Ä–∞'},\n      {from:'–î–∏—Ä–µ–∫—Ç–æ—Ä',to:'–î–∏—Ä–µ–∫—Ç–æ—Ä–∞'},\n      {from:'–≥–µ–Ω–µ—Ä–∞–ª—å–Ω—ã–π',to:'–≥–µ–Ω–µ—Ä–∞–ª—å–Ω–æ–≥–æ'},\n      {from:'–ì–µ–Ω–µ—Ä–∞–ª—å–Ω—ã–π',to:'–ì–µ–Ω–µ—Ä–∞–ª—å–Ω–æ–≥–æ'},\n      {from:'—É–ø—Ä–∞–≤–ª—è—é—â–∏–π',to:'—É–ø—Ä–∞–≤–ª—è—é—â–µ–≥–æ'},\n      {from:'–£–ø—Ä–∞–≤–ª—è—é—â–∏–π',to:'–£–ø—Ä–∞–≤–ª—è—é—â–µ–≥–æ'},\n      {from:'–∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å',to:'–∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª—è'},\n      {from:'–ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å',to:'–ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—è'},\n      {from:'–∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏–π',to:'–∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–≥–æ'},\n      {from:'–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∏–π',to:'–ö–æ–º–º–µ—Ä—á–µ—Å–∫–æ–≥–æ'},\n      {from:'—Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π',to:'—Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–≥–æ'},\n      {from:'–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π',to:'–§–∏–Ω–∞–Ω—Å–æ–≤–æ–≥–æ'},\n    ];\n    const doc = [\n      {from:'—É—Å—Ç–∞–≤',to:'—É—Å—Ç–∞–≤–∞'},\n      {from:'–£—Å—Ç–∞–≤',to:'–£—Å—Ç–∞–≤–∞'},\n      {from:'–ø—Ä–∏–∫–∞–∑',to:'–ø—Ä–∏–∫–∞–∑–∞'},\n      {from:'–ü—Ä–∏–∫–∞–∑',to:'–ü—Ä–∏–∫–∞–∑–∞'},\n      {from:'–¥–æ–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å',to:'–¥–æ–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏'},\n      {from:'–î–æ–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å',to:'–î–æ–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏'},\n    ]    \n    const src = typ === 'doc' ? doc : position;\n    let str = '';\n    val.split(' ').map((s)=>{\n      src.map((m)=>{\n        if (m.from === s.trim()) {\n          s = m.to;\n        }\n      })\n      str += ' '+s;\n    })\n    if (typ === 'doc') {\n      setDoca(str);\n    } else {\n      setPosa(str)\n    }\n    \n    return val;\n  }\n\nconst handleBlur = () => {\n  setOpenPosa(true);\n}\n\n  return (\n      <Segment.Group>\n      <Segment>{props.dadata.name}</Segment>\n      <Segment.Group>\n        <Segment.Group horizontal>\n        <RFSegment \n          label={'–ü–æ–¥–ø–∏—Å–∞–Ω—Ç –§–ò–û'}\n          placeholder={'–§–ò–û'}\n          value = {getManagement()}\n          change = {(val)=> setFieldData('fio',val)}\n        />\n        <RFSegment \n          label={'–ü–æ–¥–ø–∏—Å–∞–Ω—Ç –§–ò–û –≤ —Ä–æ–¥–∏—Ç–µ–ª—å–Ω–æ–º –ø–∞–¥–µ–∂–µ'}\n          placeholder={'–§–ò–û —Ä.–ø.'}\n          value={''}\n          change = {(val)=> setFieldData('fioi',val)}\n        />\n        </Segment.Group>\n        <Segment.Group horizontal>\n        <RFSegment \n          label={'–î–æ–ª–∂–Ω–æ—Å—Ç—å'}\n          placeholder={'–î–æ–ª–∂–Ω–æ—Å—Ç—å'}\n          value={''}\n          change = {(val)=> {\n            // setPosa(val);\n            setFieldData('position',val);\n          }}\n        />\n        <RFSegment \n          label={'–î–æ–ª–∂–Ω–æ—Å—Ç—å –≤ —Ä.–ø.'}\n          placeholder={'–î–æ–ª–∂–Ω–æ—Å—Ç—å –≤ —Ä.–ø.'}\n          value={''}\n          change = {(val)=> setFieldData('positiona',val)}\n        />\n        </Segment.Group>\n        <Segment.Group horizontal>\n        <RFSegment \n          label={'–û—Å–Ω–æ–≤–∞–Ω–∏–µ'}\n          placeholder={'–£—Å—Ç–∞–≤ / –î–æ–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –æ—Ç 00.00.2021'}\n          value={''}\n          change = {(val)=> setFieldData('based',val)}\n        />        \n        <RFSegment \n          label={'–û—Å–Ω–æ–≤–∞–Ω–∏–µ –≤ —Ä.–ø.'}\n          placeholder={'–£—Å—Ç–∞–≤–∞ / –î–æ–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –æ—Ç 00.00.2021'}\n          value={''}\n          change = {(val)=> setFieldData('baseda',val)}\n        />                \n        </Segment.Group>\n        <Segment.Group horizontal>\n          <RFSegment \n            label={'–ò–ù–ù'}\n            placeholder={'–ò–ù–ù'}\n            value={props.dadata.inn}\n            change = {(val)=> setFieldData('inn',val)}\n          />             \n          <RFSegment \n            label={'–ö–ü–ü'}\n            placeholder={'–ö–ü–ü'}\n            value={props.dadata.kpp}\n            change = {(val)=> setFieldData('kpp',val)}\n          />             \n        </Segment.Group>\n        <Segment.Group horizontal>\n          <RFSegment \n            label={'–û–ì–†–ù'}\n            placeholder={'–û–ì–†–ù'}\n            value={props.dadata.ogrn}\n            change = {(val)=> setFieldData('ogrn',val)}\n          />                       \n          <RFSegment \n            label={'–û–ö–ü–û'}\n            placeholder={'–û–ö–ü–û'}\n            value={props.dadata.okpo}\n            change = {(val)=> setFieldData('okpo',val)}\n          />         \n          <RFSegment \n            label={'–û–ö–í–≠–î'}\n            placeholder={'–û–ö–í–≠–î'}\n            value={props.dadata.okved}\n            change = {(val)=> setFieldData('okved',val)}\n          />                                 \n        </Segment.Group>\n        <Segment>–ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã</Segment>\n        <Segment>\n          <Form.Field>\n              <label>{bankNameRender()}</label>\n              <ReactDadataBox \n              token=\"a677c0dcff5cd2767c0aa85a6793f5430a3be34a\" \n              type=\"bank\"\n              placeholder=\"–ë–ò–ö\"\n              onChange={bankSelected} \n              />\n          </Form.Field>     \n        </Segment>\n        \n          {bankName && (\n                    <Transition\n                      transitionOnMount={true}\n                      duration={800}\n                      visible={!!bankName}\n                      \n                    >\n                      <Segment>\n                        <Segment.Group>\n                          <Segment>\n                            <Form.Field>\n                                <label>–ê–¥—Ä–µ—Å</label>\n                                <input \n                                disabled={true}\n                                value={bankDetails.address}\n                                />\n                            </Form.Field>   \n                          </Segment>\n                          <Segment.Group horizontal>\n                            <Segment>\n                              <Form.Field>\n                                  <label>–ë–ò–ö</label>\n                                  <input \n                                  disabled={true}\n                                  value={bankDetails.bik}\n                                  />\n                              </Form.Field>                          \n                            </Segment>\n                            <Segment>\n                              <Form.Field>\n                                  <label>–∫/—Å</label>\n                                  <input \n                                  disabled={true}\n                                  value={bankDetails.corr}\n                                  />\n                              </Form.Field>                    \n                            </Segment>\n                          </Segment.Group>\n                          <RFSegment \n                            label={'–†–∞—Å—á–µ—Ç–Ω—ã–π —Å—á–µ—Ç'}\n                            placeholder={'–£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Ä–∞—Å—á–µ—Ç–Ω–æ–≥–æ —Å—á–µ—Ç–∞'}\n                            error_message={'–í –Ω–æ–º–µ—Ä–µ —Ä–∞—Å—á–µ—Ç–Ω–æ–≥–æ —Å—á–µ—Ç–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 20 —Ü–∏—Ñ—Ä'}\n                            value={''}\n                            change = {(val)=> setFieldData('rs',validRS(val))}\n                            validator = {(e)=>!!e.match(/^\\d{20}$/)}\n                          />   \n                        </Segment.Group>\n                      </Segment>\n                    </Transition>\n                      )\n          }\n        \n                                                                                                    \n      </Segment.Group>\n    </Segment.Group>            \n  );\n}\n\n  export default RequiredFields;\n\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Form,\n  Segment,\n  Message,\n  Transition,\n  Grid,\n  ButtonGroup,\n  List,\n} from \"semantic-ui-react\";\nimport AppContext from \"./appContext\";\nimport ModalContract from \"../Modal/contract\";\nimport LkSteps from \"./lkSteps\";\nimport SearchAddress from \"./searchAddress.js\";\nimport ChildList from \"./childList\";\nimport RegisterChooser from \"./registerChooser\";\nimport PlusMinusInput from \"./plusMinus\";\nimport Cards from \"./cards\"\nimport {IMaskInput} from 'react-imask';\nimport RequiredFields from './requiredFields';\n\n\n\nexport default class FormLoading extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      agree: false,\n      dadataSearchValue: \"\",\n      step: 1,\n      foundData: false,\n      datalist: false,\n      phone: undefined,\n      email: undefined,\n      confirmation: \"\",\n      pendingConfirmation: false,\n      contactConfirmed: false,\n      validInput: false,\n      dadata: {},\n      error: {\n        mailInput: false,\n        telInput: false,\n      },\n      cardsNum: 1,\n      cardsList: [],\n      address: {},\n      contractReady: false,\n      contractError: '',\n      lkData: {},\n      innExists: false,\n      processingRequest: false,\n      contractno: 0,\n      companyDetails: {},\n      docoptions: [\n        {key: 'dd',value: 'dd', text:'–ö–æ–Ω—Ç—É—Ä –î–∏–∞–¥–æ–∫'},\n        {key: 'tz',value: 'tz', text:'–¢–ï–ó–ò–°'},\n        {key: 'log',value: 'log', text:'–õ–æ–≥–∏–∫–∞ –°–≠–î'},\n        {key: 'oth',value: 'oth', text:'–î—Ä—É–≥–∞—è', active: true},\n      ],\n    };\n    this.searchResults = [];\n\n    this.confirmContract = this.confirmContract.bind(this);\n    this.getContract = this.getContract.bind(this);\n    this.setCompanyDetails = this.setCompanyDetails.bind(this);\n\n    this.components = {\n      foo: Segment,\n      Message: Message,\n    };\n\n  }\n\n  render() {\n\n    const {\n      agree,\n      pendingConfirmation,\n      contactConfirmed,\n      step,\n      foundData,\n      datalist,\n      email,\n      phone,\n      validInput,\n      innExists,\n      processingRequest,\n      cardsNum,\n      docoptions,\n      companyDetails,\n    } = this.state;\n\n    const contextSate = {\n      state: this.state,\n      setAddress: (address) => {\n        this.setState({ address: address });\n      },\n    };\n    \n    let confirmBtnDisabled = true;\n\n    if (agree) {\n        if (phone !== undefined && phone !== \"\" && companyDetails.docsystem !== '') {\n          confirmBtnDisabled = false;\n        }\n    }\n\n    const getActiveDocoptions = ()=>{\n      const act = docoptions.filter(e => {\n        return !!e.active;\n      });\n      return act[0]\n    }\n\n    const setActiveDocoptions = (k, {key,value})=>{\n      const doc = docoptions.map(e=>{\n        e.active = e.value === value;\n        e.active && this.setCompanyDetails('docsystem',e.value === 'oth' ? '':e.text)\n        return e;\n      })\n      this.setState({docoptions: doc})\n    }\n\n    const docSystemFreeType = () => getActiveDocoptions().value === 'oth';\n\n    let privateData = (<Segment><h2>–î–æ–≥–æ–≤–æ—Ä –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω</h2></Segment>);\n\n    if (this.state.contractReady && this.state.contractError === '') {\n      privateData = (\n        <Segment>\n          <Message\n          header=\"–®–ê–ì 4\"\n          positive\n          attached\n          content='–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç–æ–ø–ª–∏–≤–Ω—ã—Ö –∫–∞—Ä—Ç –ò–ù–§–û–†–ö–û–ú'\n          >\n          </Message>          \n          <List className=\"userdata\">\n            <List.Item>\n              <List.Header>–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</List.Header>\n            </List.Item>\n            <List.Item>\n              <List.Description>–ê–¥—Ä–µ—Å - <a href={this.state.lkData.link}>{this.state.lkData.link}</a></List.Description>\n            </List.Item>       \n            <List.Item>\n              <List.Description>–õ–æ–≥–∏–Ω - {this.state.lkData.login}</List.Description>\n            </List.Item>       \n            <List.Item>\n              <List.Description>–ü–∞—Ä–æ–ª—å - {this.state.lkData.password}</List.Description>\n            </List.Item>                   \n            <List.Item>\n              <List.Header>–î–æ–∫—É–º–µ–Ω—Ç—ã</List.Header>\n            </List.Item>    \n            <List.Item>\n              <List.Description><span onClick={this.getContract}>–°–∫–∞—á–∞—Ç—å –¥–æ–≥–æ–≤–æ—Ä</span></List.Description>\n            </List.Item>    \n          </List>\n        </Segment>);\n    }\n    if (this.state.contractReady && this.state.contractError !== '') {\n      privateData = (\n        <Segment>\n          <Message\n          header=\"–®–ê–ì 4\"\n          negative\n          attached\n          content={this.state.contractError}\n          >\n          </Message>\n        </Segment>\n      );\n    }\n\n    const searchAddressBlock = cardsNum > this.state.cardsList.length \n        ? (<SearchAddress setSelected={this.setValue.bind(this)} />) \n        : '';\n\n    return (\n      <Grid>\n        <Grid.Row>\n          <LkSteps\n            active={step}\n            onClick={this.setStep.bind(this)}\n            completed={foundData}\n          ></LkSteps>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column width={16}>\n            <AppContext.Provider value={contextSate}>\n              <Form>\n                {step === 1 && (\n                  <Transition\n                    transitionOnMount={true}\n                    animation=\"fly left\"\n                    duration={500}\n                  >\n                    <Segment raised>\n                      <Message\n                        header=\"–®–ê–ì 1\"\n                        content=\"–ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã. –í–≤–µ–¥–∏—Ç–µ –ò–ù–ù –∫–æ–º–ø–∞–∏–∏ –∏–ª–∏ –ò–ü\"\n                      />\n\n                      <Form.Input\n                        action={{\n                          content: \"–ù–∞–π—Ç–∏\",\n                          onClick: () => this.askDadata(),\n                        }}\n                        label=\"–ò–ù–ù\"\n                        name=\"dadataSearchValue\"\n                        placeholder=\"–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ò–ù–ù\"\n                        onChange={(e) => {\n                          if (e.target.value === \"\") {\n                            this.setState({ \n                              dadata: {},\n                              innExists: false,\n                              foundData: false,\n                              dadataSearchValue: false\n                            });\n                          } else {\n                            this.setState({\n                              dadataSearchValue: e.target.value.replace(/\\s/g,''),\n                            });\n                          }\n                        }}\n                      ></Form.Input>\n                      <Transition\n                        visible={innExists}\n                        animation='fade'\n                        duration={500}\n                      >\n                          <Message\n                          negative\n                          content=\"–£ –Ω–∞—Å —É–∂–µ –µ—Å—Ç—å –¥–æ–≥–æ–≤–æ—Ä —Å —ç—Ç–∏–º —é—Ä.–ª–∏—Ü–æ–º\"\n                          >\n\n                          </Message>\n                      </Transition>\n                      <Transition\n                        visible={(foundData || datalist) && step === 1}\n                        animation=\"fade\"\n                        duration={500}\n                      >\n                        <Segment>\n                          {this.renderDadata()}\n                          \n                          <Button\n                            fluid\n                            loading={processingRequest}\n                            color=\"orange\"\n                            disabled={!foundData || innExists}\n                            onClick={() => {\n                              this.setState({processingRequest:true})\n                              this.isNewContract()\n                                .then(c_resp => c_resp.json())\n                                .then(cr=>{\n                                  this.setState({processingRequest:false})\n                                  switch (cr.status) {\n                                    case 'OK':\n                                      this.setState({innExists:false})\n                                      this.setStep(2);\n                                      break; \n                                      case 'WARNING':\n                                        this.setState({innExists:true})\n                                        break;                                       \n                                      default:\n                                        this.setState({innExists:true})                                         \n                                  }\n                                })\n                                \n\n                            }}\n                          >\n                            –í—Å–µ –≤–µ—Ä–Ω–æ\n                          </Button>\n                        </Segment>\n                      </Transition>\n                    </Segment>\n                  </Transition>\n                )}\n                {step === 2 && (\n                  <Transition\n                    transitionOnMount={true}\n                    animation=\"fly left\"\n                    duration={500}\n                  >\n                    <Segment raised disabled={!foundData}>\n                      <Message\n                        header=\"–®–ê–ì 2\"\n                        content=\"–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–ø–æ–ª–Ω–∏—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –¥–ª—è –¥–æ–≥–æ–≤–æ—Ä–∞\"\n                      />\n                      <RequiredFields\n                        dadata = {this.state.dadata}\n                        passData = {this.setCompanyDetails}\n                      />\n                      <Button\n                        fluid\n                        color=\"orange\"\n                        disabled={!this.—ÅompanyDetailsComplete()}\n                        // onClick={() => this.checkMail()}\n                        onClick={() => this.setStep(3)}\n                      >\n                        OK\n                      </Button>\n                    </Segment>\n                  </Transition>\n                )}\n                {step === 3 && (\n                  <Transition\n                    transitionOnMount={true}\n                    animation=\"fly left\"\n                    duration={500}\n                  >\n                    <Segment raised disabled={!this.—ÅompanyDetailsComplete()}>\n                      <Message\n                        header=\"–®–ê–ì 3\"\n                        attached\n                        content=\"–£—Ç–æ—á–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ —Ç–æ–ø–ª–∏–≤–Ω—ã–º –∫–∞—Ä—Ç–∞–º\"\n                      />\n                      <Segment>\n\n                      <Cards\n                          passValue={(v) => \n                            this.setState({\n                              cardsList: v,\n                              cardsNum: v.length > cardsNum ? v.length : cardsNum\n                            })\n                          }\n                        />\n\n                        <PlusMinusInput\n                          name=\"cardsNum\"\n                          min={1}\n                          max={5}\n                          preset={this.state.cardsList.length}\n                          passVal={this.setValue.bind(this)}\n                        />\n                        \n                        {/* {searchAddressBlock} */}\n                        <Form.Select\n                          fluid\n                          label='C–∏—Å—Ç–µ–º–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–æ–±–æ—Ä–æ—Ç–∞'\n                          options={docoptions}\n                          onChange={setActiveDocoptions}\n                        />\n                        <Transition\n                          visible={docSystemFreeType()}\n                          animation=\"scale\"\n                          duration={500}\n                        >\n                           <Form.Input \n                            fluid \n                            label='–î—Ä—É–≥–∞—è:' \n                            placeholder='–í–≤–µ–¥–∏—Ç–µ —ç—Ç–æ —á—É–¥–æ'\n                            value={companyDetails.docsystem ? companyDetails.docsystem : ''} \n                            onChange={(e,{name,value})=>{\n                              this.setCompanyDetails('docsystem',value)\n                            }}\n                            />\n                        </Transition>\n                        \n\n                        <Form.Field>\n                        <label>{\"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞\"}<span class=\"required\">*</span></label>\n                        <IMaskInput \n                            name={'contact_phone'}\n                            mask={\"+{7} 000 000-00-00\"}\n                            unmask={true}\n                            placeholder={\"+7 999 999-99-99\"}\n                            onComplete={\n                              (unmskedValue)=>{\n                                this.setState({\n                                  phone: unmskedValue\n                                })\n                              }\n                            }\n                        />\n                        </Form.Field>     \n\n\n                        <Form.Checkbox\n                          label=\"–í—Å–µ –¥–∞–Ω–Ω—ã–µ –≤–Ω–µ—Å–µ–Ω—ã –≤–µ—Ä–Ω–æ\"\n                          defaultChecked={false}\n                          onChange={(e) => {\n                            let prevState = e.target.parentElement.querySelector(\n                              \"input\"\n                            ).checked;\n                            this.setState({ agree: !prevState });\n                          }}\n                        />\n                        <ButtonGroup fluid>\n\n                          {/* <ModalContract\n                            active={this.state.address !== \"\"}\n                          ></ModalContract> */}\n                          <Button\n                            disabled={confirmBtnDisabled}\n                            color={confirmBtnDisabled ? \"grey\" : \"orange\"}\n                            onClick={this.confirmContract}\n                          >\n                            –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å\n                          </Button>\n                        </ButtonGroup>\n                      </Segment>\n                    </Segment>\n                  </Transition>\n                )}\n                {step === 4 && (\n                  <Transition\n                    transitionOnMount={true}\n                    animation=\"fly left\"\n                    duration={500}\n                  >\n                    {privateData}\n                  </Transition>\n                )}\n              </Form>\n            </AppContext.Provider>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n\n  setStep(num) {\n    this.setState({ step: num });\n  }\n\n  askDadata(e) {\n    const val = this.state.dadataSearchValue;\n    if (!val) return;\n    const url =\n      \"https://suggestions.dadata.ru/suggestions/api/4_1/rs/findById/party\";\n    const token = \"a677c0dcff5cd2767c0aa85a6793f5430a3be34a\";\n    const options = {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: \"Token \" + token,\n      },\n      body: JSON.stringify({ query: val }),\n    };\n    fetch(url, options)\n      .then((response) => response.text())\n      .then((result) => {\n        this.searchResults = JSON.parse(result).suggestions;\n        if (this.searchResults.length) {\n          if (this.searchResults.length === 1) {\n            this.setFoundCompany(this.searchResults[0], true);\n          } else {\n            this.setFoundCompany(this.searchResults, false);\n          }\n        } else {\n          this.setState({ foundData: false });\n        }\n      });\n  }\n\n  setFoundCompany(rec, found) {\n    if (Array.isArray(rec)) {\n      let ddata = [];\n      let main = rec.filter((r) => r.data.branch_type === \"MAIN\");\n      rec.map((r) => {\n        ddata.push({\n          name: r.value,\n          name_list: r.data.name,\n          address: r.data.address.unrestricted_value,\n          address_obj: r.data.address.data,\n          inn: r.data.inn,\n          kpp: r.data.kpp,\n          ogrn: r.data.ogrn,\n          okpo: main[0].data.okpo ? main[0].data.okpo : r.data.okpo,\n          okved: main[0].data.okved ? main[0].data.okved : r.data.okved,\n          management: r.data.management,\n          type: r.data.type,\n        });\n      });\n      this.setState({\n        datalist: true,\n        dadata: ddata,\n      });\n    } else {\n      const {\n        companyDetails,\n        other\n      } = this.state; \n      companyDetails.fio = rec.data ? rec.data.ogrn : rec.ogrn;\n      companyDetails.ogrn = rec.data ? rec.data.ogrn : rec.ogrn;\n      companyDetails.okpo = rec.data ? rec.data.okpo : rec.okpo;\n      companyDetails.okved = rec.data ? rec.data.okpo : rec.okpo;\n      if (rec.data && rec.data.management) {\n      companyDetails.fio = rec.data.management.name ? rec.data.management.name : '';\n      }\n      this.setState({\n        foundData: found,\n        dadata: {\n          name: rec[\"value\"] ? rec[\"value\"] : rec.name,\n          name_list: rec.data ? rec.data.name : rec.name_list,\n          address: rec.data ? rec.data.address.unrestricted_value : rec.address,\n          address_obj: rec.data ? rec.data.address.data : rec.address_obj,\n          inn: rec.data ? rec.data.inn : rec.inn,\n          kpp: rec.data ? rec.data.kpp : rec.kpp,\n          ogrn: rec.data ? rec.data.ogrn : rec.ogrn,\n          okpo: rec.data ? rec.data.okpo : rec.okpo,\n          okved: rec.data ? rec.data.okved : rec.okved,\n          management: rec.data ? rec.data.management : rec.management,\n          type: rec.data ? rec.data.type : rec.type,\n        },\n      });\n\n    }\n  }\n\n  renderDadata() {\n    if (Array.isArray(this.state.dadata)) {\n      return (\n        <div>\n          <label>–ö–∞–∫–æ–π –∏–º–µ–Ω–Ω–æ —Ñ–∏–ª–∏–∞–ª:</label>\n          <ChildList>\n            {() =>\n              this.state.dadata.map((d, i) => (\n                <div\n                  className=\"item\"\n                  key={\"comp\" + i}\n                  onClick={() => {\n                    this.setFoundCompany(d, true);\n                  }}\n                >\n                  <span className=\"name\">{d.name}</span>\n                  <span className=\"code\">–ò–ù–ù {d.inn}</span>\n                  <span className=\"address\">{d.address}</span>\n                </div>\n              ))\n            }\n          </ChildList>\n        </div>\n      );\n    } else {\n      if (!Object.keys(this.state.dadata).length) return null;\n      let kpp = this.state.dadata.kpp ? (\n        <p key=\"kpp\">\n          <b>–ö–ü–ü: </b> {this.state.dadata.kpp}\n        </p>\n      ) : (\n        \"\"\n      );\n      return (\n        <>\n          <p key=\"name\">\n            <b> {this.state.dadata.name}</b>\n          </p>\n          <p key=\"address\"> {this.state.dadata.address}</p>\n          <p key=\"inn\">\n            <b>–ò–ù–ù: </b> {this.state.dadata.inn}\n          </p>\n          {kpp}\n          <p key=\"ogrn\">\n            <b>–û–ì–†–ù: </b> {this.state.dadata.ogrn}\n          </p>\n        </>\n      );\n    }\n  }\n\n\n  getContract() {\n    const query = {\n      email: this.state.email ? this.state.email : '',\n      phone: this.state.phone ? this.state.phone : '',\n      docno: this.state.lkData.docno,\n      docdate: this.state.lkData.docdate,\n      delivery_address: this.state.address,\n      cardsNum: this.state.cardsNum,\n      cardsList: this.state.cardsList.map(e=>e.replace(/\\s/g,'')),\n      org: this.state.dadata,\n      details: this.state.companyDetails\n    }\n\n    const url = \"https://data.inforkom.ru/api/v1/util/contract/document\";\n    const options = {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\",\n        },\n        body: JSON.stringify(query)\n    }\n    fetch(url, options)\n    .then(response => response.blob())\n    .then(blob=>{\n      let url = window.URL.createObjectURL(blob);\n      let a = document.createElement('a');\n      a.href = url;\n      a.download = \"contract.docx\";\n      document.body.appendChild(a);\n      a.click();    \n      a.remove();\n      window.URL.revokeObjectURL(url);\n    })     \n  }\n\n  confirmContract() {\n    const query = {\n      email: this.state.email ? this.state.email : '',\n      phone: this.state.phone ? this.state.phone : '',\n      delivery_address: this.state.address,\n      cardsNum: this.state.cardsNum,\n      cardsList: this.state.cardsList.map(e=>e.replace(/\\s/g,'')),\n      org: this.state.dadata,\n      details: this.state.companyDetails\n    }\n\n    const url = \"https://data.inforkom.ru/api/v1/util/contract/confirm\";\n    const options = {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\",\n        },\n        body: JSON.stringify(query)\n    }    \n    fetch(url, options)\n    .then(response => response.json())\n    .then(obj=>{\n      if (obj.status === 'ok') {\n        this.setState({\n          contractReady: true,\n          contractError: obj.error,\n          lkData: {\n            login: obj.login,\n            password: obj.password,\n            link: obj.link,\n            docno: obj.docno,\n            docdate: obj.docdate,\n            cid: obj.cid\n          }\n        })\n        this.setStep(4)\n      }\n    })\n  }\n\n  setValue = (e, n) => {\n    let st = {};\n    st[n.name] = n.value;\n    this.setState(st);\n  };\n  setUnmaskedValue = (val, name) => {\n    let st = {};\n    st[name] = val;\n    this.setState(st);\n  };\n\n  isNewContract = () => {\n    let query = {};\n    if (this.state.foundData && this.state.dadata.inn) query.inn = this.state.dadata.inn;\n    if (this.state.foundData && this.state.dadata.kpp) query.kpp = this.state.dadata.kpp;\n    const url = \"https://data.inforkom.ru/api/v1/util/contract/checkInn\";\n    const options = {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify(query),\n    };    \n    return fetch(url,options)\n  }\n\n  setCompanyDetails = (key,val) => {\n    const {\n      companyDetails,\n      other\n    } = this.state;\n    companyDetails[key] = val;\n    this.setState({\n      companyDetails: companyDetails\n    })\n  }\n\n  —ÅompanyDetailsComplete = () => {\n    const required = ['fio','fioi','position', 'positiona', 'based', 'baseda', 'ogrn','bank','bik','ks','rs','baddress'];\n    const {\n      companyDetails,\n      other\n    } = this.state;    \n    for (let name of required) {\n      if (!companyDetails[name] || companyDetails[name] === '') {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","import './App.css';\nimport FormLoading from './components/Form';\nimport { Container, Grid } from 'semantic-ui-react'\n\nfunction App() {\n  return (\n    <Container>\n    <Grid>\n      <Grid.Row>\n        <FormLoading></FormLoading>\n      </Grid.Row>      \n    </Grid>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}